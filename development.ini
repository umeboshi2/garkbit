###
# app configuration
# https://docs.pylonsproject.org/projects/pyramid/en/latest/narr/environment.html
###
[DEFAULT]
#sqlalchemy_url = sqlite:///%(here)s/garkbit.sqlite
#sqlalchemy_url = postgresql+psycopg2://dbadmin@localhost/garkbit
sqlalchemy_url = postgresql+psycopg2://dbadmin@localhost/hubbytest

[app:main]
use = egg:garkbit
environment = development
 
pyramid.reload_templates = true
pyramid.debug_authorization = true
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en
pyramid.includes =
    pyramid_jinja2
    pyramid_mako
    cornice
    pyramid_jwt
    #ziggurat_foundations.ext.pyramid.get_user
    pyramid_debugtoolbar


sqlalchemy.url = %(sqlalchemy_url)s
retry.attempts = 3

hattie_dburl = sqlite:///%(here)s/hattie.sqlite

#ziggurat_foundations.user_model_location = garkbit.models.uzig:User
#ziggurat_foundations.model_locations.User = garkbit.models.uzig:User
#ziggurat_foundations.session_provider_callable = garkbit.models.util:getDBSession

jwt.auth_type = Bearer

# five minutes
#jwt.expiration = 300

# one hour
#jwt.expiration = 3600

# just over two days
jwt.expiration = 200000

# By default, the toolbar only appears for clients from IP addresses
# '127.0.0.1' and '::1'.
# debugtoolbar.hosts = 127.0.0.1 ::1

api.use_pyramid_jsonapi = false
pyramid_jsonapi.route_pattern_api_prefix = api/admin/jsonapi
pyramid_jsonapi.route_pattern_metadata_prefix = api/admin/metadata

# A generic, single database configuration.

[alembic]
# path to migration scripts
script_location = %(here)s/alembic
sqlalchemy.url = %(sqlalchemy_url)s

# template used to generate migration files
# file_template = %%(rev)s_%%(slug)s

# timezone to use when rendering the date
# within the migration file as well as the filename.
# string value is passed to dateutil.tz.gettz()
# leave blank for localtime
# timezone =

# max length of characters to apply to the
# "slug" field
#truncate_slug_length = 40

# set to 'true' to run the environment during
# the 'revision' command, regardless of autogenerate
# revision_environment = false

# set to 'true' to allow .pyc and .pyo files without
# a source .py file to be detected as revisions in the
# versions/ directory
# sourceless = false

# version location specification; this defaults
# to alembic/versions.  When using multiple version
# directories, initial revisions must be specified with --version-path
# version_locations = %(here)s/bar %(here)s/bat alembic/versions

# the output encoding used when revision files
# are written from script.py.mako
# output_encoding = utf-8


###
# wsgi server configuration
###

[server:waitress]
use = egg:waitress#main
#listen = localhost:8081
port = 8081

[server:main]
#[server:gunicorn]
use = egg:gunicorn#main
host = 0.0.0.0
port = 8081
#port = 8080
#workers = 3
reload = true
preload = true
threads = 3
accesslog = -
loglevel = debug
forwarded_allow_ips = *
config = %(here)s/gunicorn-config.py


debug = true
timeout = 900000
#workers = 1
#worker_class = "sync"
reload_engine = auto

###
# logging configuration
# https://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html
###

[loggers]
keys = root, garkbit, sqlalchemy, alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_garkbit]
level = DEBUG
handlers =
qualname = garkbit

[logger_sqlalchemy]
level = INFO
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s:%(lineno)s][%(threadName)s] %(message)s
